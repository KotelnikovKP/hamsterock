# Generated by Django 4.1.7 on 2023-03-09 09:14

import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rate', models.DateField(verbose_name='Дата курса')),
                ('rate', models.DecimalField(decimal_places=9, default=0.0, max_digits=19, verbose_name='Курс валюты 1 к валюте 2')),
                ('currency_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currency_1', to='main.currency', verbose_name='Валюта 1')),
                ('currency_2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currency_2', to='main.currency', verbose_name='Валюта 2')),
            ],
            options={
                'verbose_name': 'Курс валюты',
                'verbose_name_plural': 'Курсы валют',
                'ordering': ['-date_rate'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование')),
                ('type', models.CharField(choices=[(None, '<тип не выбран>'), ('Наличные', (('WAL', 'Кошелек с наличными'), ('SAF', 'Сейф'), ('SAB', 'Банковская ячейка'), ('STA', 'Тайничок'))), ('Счет/карта в банке', (('DEC', 'Дебетовая карта'), ('CUA', 'Текущий счет'))), ('Кредитный счет/карта', (('CRC', 'Кредитная карта'), ('CRA', 'Кредитный счет'), ('MOA', 'Ипотечный счет'))), ('Накопления', (('DEA', 'Вклад'), ('SAA', 'Накопительный счет'))), ('Инвестиции', (('INA', 'Инвестиционный счет'),)), ('Бизнес-инструменты', (('BCA', 'Касса'), ('BSA', 'Сейф'), ('BCU', 'Расчетный счет'), ('BDC', 'Дебетовая бизнес-карта'), ('BCC', 'Кредитная бизнес-карта'), ('BCR', 'Кредитный бизнес-счет'), ('BDE', 'Депозит')))], max_length=3, verbose_name='Тип')),
                ('group', models.CharField(blank=True, max_length=6, null=True, verbose_name='Группа')),
                ('time_zone', models.DecimalField(choices=[(Decimal('-12.00'), '(UTC-12:00) Линия перемены дат'), (Decimal('-11.00'), '(UTC-11:00) Время в формате UTC -11'), (Decimal('-10.00'), '(UTC-10:00) Гавайи'), (Decimal('-9.00'), '(UTC-09:00) Аляска'), (Decimal('-8.00'), '(UTC-08:00) Тихоокеанское время (США и Канада)'), (Decimal('-7.00'), '(UTC-07:00) Горное время (США и Канада)'), (Decimal('-6.00'), '(UTC-06:00) Центральное время (США и Канада), Мехико'), (Decimal('-5.00'), '(UTC-05:00) Восточное время (США и Канада), Богота, Лима'), (Decimal('-4.00'), '(UTC-04:00) Атлантическое время (Канада), Каракас, Ла-Пас'), (Decimal('-3.50'), '(UTC-03:30) Ньюфаундленд'), (Decimal('-3.00'), '(UTC-03:00) Бразилиа, Буэнос-Айрес'), (Decimal('-2.00'), '(UTC-02:00) Время в формате UTC -02'), (Decimal('-1.00'), '(UTC-01:00) Азорские острова'), (Decimal('0.00'), '(UTC) Время Западной Европы, Дублин, Эдинбург, Лиссабон, Лондон'), (Decimal('1.00'), '(UTC+01:00) Амстердам, Берлин, Брюссель, Копенгаген, Мадрид, Париж, Рим'), (Decimal('2.00'), '(UTC+02:00) Вильнюс, Иерусалим, Каир, Калининград, Киев, Рига, Таллин, Хельсинки'), (Decimal('3.00'), '(UTC+03:00) Багдад, Минск, Москва, Санкт-Петербург, Стамбул'), (Decimal('3.50'), '(UTC+03:30) Тегеран'), (Decimal('4.00'), '(UTC+04:00) Абу-Даби, Баку, Ереван, Самара, Тбилиси'), (Decimal('4.50'), '(UTC+04:30) Кабул'), (Decimal('5.00'), '(UTC+05:00) Ашхабад, Душанбе, Екатеринбург, Исламабад, Ташкент'), (Decimal('5.50'), '(UTC+05:30) Колката, Мумбаи, Нью-Дели, Ченнай'), (Decimal('5.75'), '(UTC+05:45) Катманду'), (Decimal('6.00'), '(UTC+06:00) Алматы, Астана, Дакка, Омск'), (Decimal('7.00'), '(UTC+07:00) Бангкок, Джакарта, Красноярск, Новосибирск, Томск, Ханой'), (Decimal('8.00'), '(UTC+08:00) Гонконг, Иркутск, Пекин, Улан-Батор, Урумчи, Чунцин'), (Decimal('9.00'), '(UTC+09:00) Осака, Пхеньян, Саппоро, Сеул, Токио, Якутск'), (Decimal('9.50'), '(UTC+09:30) Аделаида, Дарвин'), (Decimal('10.00'), '(UTC+10:00) Владивосток, Канберра, Мельбурн, Сидней'), (Decimal('11.00'), '(UTC+11:00) Магадан, Сахалин, Соломоновы о-ва, Новая Каледония'), (Decimal('12.00'), '(UTC+12:00) Веллингтон, Окленд, Петропавловск-Камчатский, Фиджи')], decimal_places=2, default=0.0, max_digits=5, verbose_name='Часовой пояс для времени операций')),
                ('initial_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Входящий остаток')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Текущий остаток')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Кредитный лимит')),
                ('balance_base_cur_1', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Остаток в основной базовой валюте')),
                ('balance_base_cur_2', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Остаток в дополнительной базовой валюте')),
                ('is_balances_valid', models.BooleanField(default=True, verbose_name='Остатки действительны?')),
                ('balances_valid_until', models.DateTimeField(default=datetime.datetime(2000, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), verbose_name='Остатки действительны до')),
                ('is_turnovers_valid', models.BooleanField(default=True, verbose_name='Бюджетные обороты действительны?')),
                ('turnovers_valid_until', models.DateTimeField(default=datetime.datetime(2000, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), verbose_name='Бюджетные обороты действительны до')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.budget', verbose_name='Бюджет')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.currency', verbose_name='Валюта')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Счет/кошелек',
                'verbose_name_plural': 'Счета/кошельки',
                'ordering': ['budget', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='currencyrate',
            index=models.Index(fields=['currency_1', 'currency_2', '-date_rate'], name='cr__cur_1_cur_2_date_rate_idx'),
        ),
        migrations.AddIndex(
            model_name='currencyrate',
            index=models.Index(fields=['currency_2', 'currency_1', '-date_rate'], name='cr__cur_2_cur_1_date_rate_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['budget', 'is_balances_valid'], name='a__budget_is_bal_valid_idx'),
        ),
    ]
